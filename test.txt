'''
class SQLQuery:
    def __init__(self):
        self.select_clause = ""
        self.where_clause = ""
        self.group_by_clause = ""
        self.order_by_clause = ""

    def __str__(self):
        query = self.select_clause
        if self.where_clause:
            query += f" {self.where_clause}"
        if self.group_by_clause:
            query += f" {self.group_by_clause}"
        if self.order_by_clause:
            query += f" {self.order_by_clause}"
        return query


class SQLQueryBuilder:
    def __init__(self):
        self.query = SQLQuery()

    def select(self, columns):
        self.query.select_clause = f"SELECT {', '.join(columns)}"
        return self

    def from_table(self, table_name):
        self.query.select_clause += f" FROM {table_name}"
        return self

    def where(self, condition):
        self.query.where_clause = f"WHERE {condition}"
        return self

    def group_by(self, column):
        self.query.group_by_clause = f"GROUP BY {column}"
        return self

    def order_by(self, column, order="ASC"):
        self.query.order_by_clause = f"ORDER BY {column} {order}"
        return self

    def build(self):
        return self.query


# Использование
builder = SQLQueryBuilder()
query = (builder
         .select(["id", "name", "age"])
         .from_table("users")
         .where("age > 18")
         .order_by("name")
         .build())

print(query)

'''

import requests

class HttpRequest:
    def __init__(self):
        self.method = "GET"
        self.url = ""
        self.headers = {}
        self.params = {}
        self.body = None

    def send(self):
        response = requests.request(
            method=self.method,
            url=self.url,
            headers=self.headers,
            params=self.params,
            json=self.body
        )
        return response

class HttpRequestBuilder:
    def __init__(self):
        self.request = HttpRequest()

    def set_method(self, method):
        self.request.method = method
        return self

    def set_url(self, url):
        self.request.url = url
        return self

    def add_header(self, key, value):
        self.request.headers[key] = value
        return self

    def add_param(self, key, value):
        self.request.params[key] = value
        return self

    def set_body(self, body):
        self.request.body = body
        return self

    def build(self):
        return self.request

# Использование
builder = HttpRequestBuilder()
http_request = (builder
    .set_method("POST")
    .set_url("https://jsonplaceholder.typicode.com/posts")
    .add_header("Content-Type", "application/json")
    .set_body({
        "title": "foo",
        "body": "bar",
        "userId": 1
    })
    .build())

response = http_request.send()
print("Статус код:", response.status_code)
print("Ответ:", response.json())
